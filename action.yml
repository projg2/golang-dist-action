name: Create and publish a golang vendor tarball
author: Arthur Zamarin
description: Create a Gentoo golang vendor tarball and attach it to a release
inputs:
  tag:
    description: Tag to create release on
    default: ${{ github.ref_name }}
  dist-filename:
    description: The name of distribution file (e.g. foo-1.2.3-deps.tar.xz)
    default: ${{ github.event.repository.name }}-${{ github.ref_name }}-deps.tar.xz
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: actions/setup-go@v6
      with:
        go-version: '^1.25.0'
        check-latest: true

    - name: Grab the license mapping
      shell: bash
      env:
        GOMODCACHE: "/tmp/go-mod"
      run: |
        find . -iname 'go.mod' -type f -exec dirname {} \; | while read GOMOD_DIR; do
          echo "::group::Processing ${GOMOD_DIR}/go.mod"
          pushd "${GOMOD_DIR}" >&/dev/null || exit 1
          go mod download -x -modcacherw || exit 1
          popd >&/dev/null || exit 1
          echo "::endgroup::"
        done

    - name: Create a dist tarball
      shell: bash
      env:
        XZ_OPT: "-T0 -9e"
      run: |
        echo "::group::Creating dist tarball ${{ inputs.dist-filename }}"
        find "/tmp/go-mod/cache/download" -type f -name '*.zip' -delete || exit 1
        LC_ALL=C TZ=UTC tar -C /tmp \
          --mtime="${SOURCE_DATE_EPOCH:-1970-01-01}" --sort=name --owner=250 --group=250 \
          -acf "${{ inputs.dist-filename }}" go-mod || exit 1
        echo "::endgroup::"

    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        body:
        files: ${{ inputs.dist-filename }}
        tag_name: ${{ inputs.tag }}
        fail_on_unmatched_files: true
